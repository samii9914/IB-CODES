Problem Description
Given three integers A, B and C, where A represents n, B represents r and C represents p and p is a prime number greater than equal to n, find and return the value of nCr % p where nCr % p = (n! / ((n-r)! * r!)) % p. x! means factorial of x i.e. x! = 1 * 2 * 3... * x. NOTE: For this problem, we are considering 1 as a prime.     


Problem Constraints
1 <= A <= 106
1 <= B <= A
A <= C <= 109+7
    


Input Format
The first argument given is the integer A ( = n).
The second argument given is the integer B ( = r).
The third argument given is the integer C ( = p).


Output Format
Return the value of nCr % p.


Example Input
Input 1:
 A = 5
 B = 2
 C = 13
 Input 2:
 A = 6
 B = 2
 C = 13
     


Example Output
Output 1:
 10
Output 2:
 2
       


Example Explanation
Explanation 1:
 nCr( n=5 and r=2) = 10.
 p=13. Therefore, nCr%p = 10.
 
 sol:
 public class Solution {
    public int solve(int A, int B, int C) {
        long num=fact(A,C)%C;
        long den1=fact(B,C);
        long den2=fact(A-B,C);
        long pow1=pow(den1%C,C-2,C);
        long pow2=pow(den2%C,C-2,C);
        long den=(pow1%C*pow2%C)%C;
        long ans=(num*den)%C;
        return (int)ans;
        
    }
    public long fact(int x,int m)
    {
        long ans=1;
        for(long i=2;i<=x;i++)
        {
            long j=i%m;
            ans=(ans*j)%m;
        }
        return ans;
    }
    public long pow(long x,int p,int m)
    {
        if(p==0)
        {
            return 1;
        }
        if(p==1)
        {
            return x%m;
        }
        long ca=(pow(x,p/2,m))%m;
        long ans=(ca*ca)%m;
        if(p%2!=0)
        {
           ans=(ans*x)%m; 
        }
        return ans;
    }
}
