You are given A lines and B circles. Find the maximum number of intersection points that these A lines and B circles can have with each other.


Problem Constraints
0 <= A,B <= 10000


Input Format
First argument is an integer A denoting the number of lines.
Second argument is an integer B denoting the number of circles.


Output Format
Return an integer denoting the maximum number of intersection points.


Example Input
Input 1:
A = 2
B = 2


Example Output
output 1:
11


Example Explanation
Explanaton 1:
Two circles can intersect at 2 points.
Two lines can intersect at only 1 point.
Two lines and two circles can intersect at 8 points.
So, total maximum number of intersection points are 11.


Sol:
public class Solution {
    public int getIntersection(int A, int B) {
        return (A*(A-1))/2 + B*(B-1) + A*B*2;
    }
}
