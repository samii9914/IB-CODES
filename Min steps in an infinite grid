public class Solution {
    public int coverPoints(int[] A, int[] B) {
        int count=0;
        for(int i=0;i<A.length-1;i++)
        {
            if(A[i+1]>A[i]&&B[i+1]>B[i])
            {
                count+=Math.max(A[i+1]-A[i],B[i+1]-B[i]);
            }else if(A[i+1]<A[i]&&B[i+1]<B[i])
            {
                count+=Math.max(A[i]-A[i+1],B[i]-B[i+1]);
            }
            else if(A[i+1]>A[i]&&B[i]==B[i+1])
            {
                count+=Math.max(A[i+1]-A[i],B[i]-B[i+1]);
            }else if(A[i]>A[i+1]&&B[i]==B[i+1])
            {
                count+=Math.max(A[i]-A[i+1],B[i]-B[i+1]);
            }
            else if(A[i]==A[i+1]&&B[i]<B[i+1])
            {
                count+=Math.max(A[i]-A[i+1],B[i+1]-B[i]);
            }
            else if(A[i]==A[i+1]&&B[i]>B[i+1])
            {
               count+=Math.max(A[i]-A[i+1],B[i]-B[i+1]); 
            }else if(A[i]<A[i+1]&&B[i]>B[i+1])
            {
                count+=Math.max(A[i+1]-A[i],B[i]-B[i+1]);
            }
            else
            {
                count+=Math.max(A[i]-A[i+1],B[i+1]-B[i]);
            }
        }
        return count;
        
    }
}
